name: "Deploy Serverless AWS ECS"
description: "Deploys Terraform ECS"
inputs:
  service_name:
    description: "service name"
    required: true
  service_stage:
    description: "service stage"
    required: true
  aws_region:
    description: "AWS region"
    required: false
    default: "us-west-2"
  aws_role_to_assume_root:
    description: "AWS IAM role in root env to assume"
    required: true
  aws_role_to_assume_env:
    description: "AWS IAM role in deployment env to assume"
    required: true
  timeout:
    description: "Timeout rules for service"
    default: 30

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.4.6

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ inputs.aws_role_to_assume_env }}
        aws-region: ${{ inputs.aws_region }}

    - name: ECS deploy via Terraform
      run: | 
        cd terraform/deployment
        terraform init -backend-config=${{ inputs.service_stage }}/${{ inputs.service_stage }}_${{ inputs.aws_region }}_backend_config.tfvars 
        terraform plan -var-file=${{ inputs.service_stage }}/${{ inputs.service_stage }}_${{ inputs.aws_region }}.tfvars 
        terraform apply -auto-approve -var-file=${{ inputs.service_stage }}/${{ inputs.service_stage }}_${{ inputs.aws_region }}.tfvars \
                                      -var='github_role_arn_root=${{ inputs.aws_role_to_assume_root }}' \ 
                                      -var='github_role_arn=${{ inputs.aws_role_to_assume_env }}'
      shell: bash
