name: "Deploy GraphQL subgraph to AWS EKS"
description: "Deploys GQL Subgraph EKS"
inputs:
  service_name:
    description: "service name"
    required: true
  service_stage:
    description: "service stage"
    required: true
  aws_region:
    description: "AWS region"
    required: false
    default: "us-west-2"
  aws_role_to_assume_env:
    description: "AWS IAM role in deployment env to assume"
    required: true
  timeout:
    description: "Timeout rules for service"
    default: 30
  apollo_graph_ref:
    description: "Apollo graph ref"
    required: true
  apollo_key:
    description: "Apollo API key"
    required: true
  apollo_routing_url:
    description: "Apollo routing URL"
    required: true
  service_env_vars:
    description: "env vars passed into EKS"
    default: ""
  ssh_key:
    description: "SSH key to inject into docker build"
    required: false

runs:
  using: "composite"
  steps:
    - uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Build and deploy Terraform ECS
      uses: albycom/actions/deploy_terraform_eks@main
      with:
        service_name: ${{ inputs.service_name }}
        service_stage: ${{ inputs.service_stage }}
        aws_region: ${{ inputs.aws_region }}
        aws_role_to_assume_env: ${{ inputs.aws_role_to_assume_env }}
        timeout: ${{ inputs.timeout }}
        service_env_vars: ${{ inputs.service_env_vars }}
        ssh_key: ${{ inputs.ssh_key }}

    - name: Get apollo args
      id: apollo_args
      run: |
        echo "GQL_ROUTING_URL=${{ inputs.apollo_routing_url }}" >> ${GITHUB_ENV}
        echo "APOLLO_KEY=${{ inputs.apollo_key }}" >> ${GITHUB_ENV}
      shell: bash

    - name: Install Rover
      run: |
        curl -sSL https://rover.apollo.dev/nix/v0.18.1 | sh
        # Add Rover to the $GITHUB_PATH so it can be used in another step
        # https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#adding-a-system-path
        echo "$HOME/.rover/bin" >> $GITHUB_PATH
      shell: bash

    - name: Continuously publish schema to Apollo Studio
      run: |
        for i in {1..10}; do
          echo "Running Schema Publishing: $i"
          rover subgraph introspect ${{ env.GQL_ROUTING_URL }} | rover subgraph publish ${{ inputs.apollo_graph_ref }} --name ${{ inputs.service_name }} --schema - --routing-url ${{ env.GQL_ROUTING_URL }}    
          sleep 5
        done

    # - name: Publish Schema to Studio using rover
    #   run: |
    #     rover subgraph introspect ${{ env.GQL_ROUTING_URL }} | rover subgraph publish ${{ inputs.apollo_graph_ref }} --name ${{ inputs.service_name }} --schema - --routing-url ${{ env.GQL_ROUTING_URL }}
    #   shell: bash

        