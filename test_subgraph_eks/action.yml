name: "Test Subgraph EKS"
description: "Runs black and tests on EKS structured subgraph"
inputs:
  ssh_key:
    description: "SSH key to inject into docker build"
    required: false
  python_version:
    description: "The python version to use"
    required: true
    default: '3.11'

runs:
  using: "composite"
  steps:
    - if: inputs.ssh_key != ''
      uses: webfactory/ssh-agent@v0.7.0
      with:
          ssh-private-key: ${{ inputs.ssh_key }}

    - name: Set up Python 3.x
      uses: actions/setup-python@v4
      with:
        # Semantic version range syntax or exact version of a Python version
        python-version: ${{ inputs.python_version }}
        # Optional - x64 or x86 architecture, defaults to x64
        architecture: 'x64'
    - name: Setup DynamoDB Local
      uses: rrainn/dynamodb-action@v2.0.1
      with:
        port: 8000
        cors: '*'
    - name: Start Redis
      uses: supercharge/redis-github-action@1.7.0
      with:
        redis-image: redis/redis-stack-server
        redis-version: latest
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.10.0
      with:
        mongodb-version: 7.0.5
        mongodb-username: root
        mongodb-password: root
        mongodb-db: alby
    - name: Start RabbitMQ
      uses: namoshek/rabbitmq-github-action@v1
      with:
        ports: '5672:5672 15672:15672'
    #----------------------------------------------
    #  -----  install & configure poetry  -----
    #----------------------------------------------
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    #----------------------------------------------
    #       load cached venv if cache exists
    #----------------------------------------------
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    #----------------------------------------------
    # install dependencies if cache does not exist
    #----------------------------------------------
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: cd src && poetry install --no-interaction
      shell: bash

    #----------------------------------------------
    #              run test suite
    #----------------------------------------------
    - name: Run tests
      run: |
        source src/.venv/bin/activate
        DYNAMO_ENDPOINT_URL=http://localhost:8000 pytest src/tests
      env:
        AWS_ACCESS_KEY_ID: 'random'
        AWS_SECRET_ACCESS_KEY: 'random'
        AWS_DEFAULT_REGION: 'us-west-2'
      shell: bash
    #----------------------------------------------
    #              run black
    #----------------------------------------------
    - name: Run black
      run: |
        source src/.venv/bin/activate
        black src/ --check
      shell: bash


        